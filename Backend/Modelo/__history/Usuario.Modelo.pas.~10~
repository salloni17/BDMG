unit Usuario.Modelo;

interface

uses System.Generics.Collections, Model.Connection;

type
  TUsuarioModelo = class
  private
    FCodigo: Integer;
    FLogin: String;
    FSenha: String;
  public
    constructor Create;
    destructor Destroy; override;
    property codigo: integer read FCodigo write FCodigo;
    property login: string read FLogin write FLogin;
    property senha: string read FSenha write FSenha;

    //METODOS
    class function find(login: string): TFDQuery;
  end;

implementation

uses udmConexao;

{ TUsuarioModelo }

constructor TUsuarioModelo.Create;
begin
  Model.Connection.Connect;
end;

destructor TUsuarioModelo.Destroy;
begin
  Model.Connection.Disconect;
end;

class function TUsuarioModelo.find(login: string): TUsuarioModelo;
var
  qryGenerica: TFDQuery;
begin
  Result := TUsuarioModelo.Create;

  qryGenerica := TFDQuery.Create(nil);
  qryGenerica.Connection := Model.Connection.FConnection;
  qryGenerica.SQL.Text := 'SELECT USU.ID, USU.LOGIN, USU.SENHA FROM USUARIO USU WHERE USU.LOGIN = :login';
  qryGenerica.Params.ParamByName('login').AsString := login;
  qryGenerica.Open;

  if not qryGenerica.IsEmpty then
  begin
    Result.codigo := qryGenerica.FieldByName('ID').AsInteger;
    Result.login := qryGenerica.FieldByName('LOGIN').AsString;
    Result.senha := qryGenerica.FieldByName('SENHA').AsString;
  end;

  qryGenerica.Close;
  qryGenerica.Free;
end;

end.
